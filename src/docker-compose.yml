version: '3'
services:

  src:
    restart: always
    build: .
      # context: .
    volumes:
      - '.:/src'
      # - static_volume:/home/app/web/staticfiles
    # command: sh -c "python manage.py runserver 0.0.0.0:8000"
    command: sh -c "gunicorn advance_blog.wsgi -b 0.0.0.0:8000"
    # command: sh -c "gunicorn advance_blog.wsgi:application --bind 0.0.0.0:8000"
    # command: sh -c "python manage.py migrate && gunicorn advance_blog.wsgi -b 0.0.0.0:8000"
    # command: gunicorn app:app -b :8000 --name app --log-level=debug --log-file=-
    # command: gunicorn advance_blog.wsgi:application --bind 0.0.0.0:8000
    # env_file: .env
    
    # environment:
    #   - DJANGO_SETTINGS_MODULE=advance_blog.settings.prod
    ports:
      - "8000:8000"
    depends_on:
      - db
      # - rabbitmq
      - redis
      # - celery

  db:
    restart: always
    image: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=POSTGRES_DB
      - POSTGRES_USER=POSTGRES_USER
      - POSTGRES_PASSWORD=POSTGRES_PASSWORD
  # rabbitmq:
  #   image: rabbitmq:3.7-alpine
  redis:
    restart: always
    image: redis:latest
    expose:
      - "6379"
  celery:
    build: .
    command: sh -c "celery -A advance_blog worker -l info"
    ports: []
    volumes:
      - ./:/src
    depends_on:
      - src
      # - db
      # # - rabbitmq
      # - redis
  # volumes:
  #   ./:
  nginx:
    # image: nginx:latest
    build: "./nginx"
    # volumes:
    #   - static_volume:/home/app/web/staticfiles
    # build:
    #   context: .
    #   dockerfile: "nginx/Dockerfile"
    ports:
      - "8080:80"
    depends_on:
      - src
# volumes:
#   static_volume: